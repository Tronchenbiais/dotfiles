# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

export DOTFILES_DIR="$(dirname "$(dirname "$(realpath "${BASH_SOURCE[0]}")")")"

# Use vim bindings in command line (already set in `inputrc`, but necessary for
# fzf mappings to work properly
set -o vi
# Use nvim as default editor, pager, manpager
export VIM_CLONE=nvim
export EDITOR="$VIM_CLONE"
export PAGER="$VIM_CLONE -R -"
export MANPAGER="$VIM_CLONE -R -c 'set ft=man' -"

# Use local path
export PATH="~/.local/bin:$PATH"

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
shopt -s globstar

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

PROMPT_BASE="${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u\[\033[00m\]"
PROMPT_BASE_DIR=$HOME
function __prompt_dir {
    realpath --relative-base=$PROMPT_BASE_DIR $PWD
}

PS1="\[\033[01;33m\]\$PROMPT_PROJECT$PROMPT_BASE:\[\033[01;34m\]\$(__prompt_dir)\[\033[00m\]\n"

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# enable bash completion in interactive shells
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

if [ -d $DOTFILES_DIR/config/bash ]; then
    config_files="$DOTFILES_DIR/config/bash/*.bash"
    for file in $config_files; do
        source $file
    done
fi

